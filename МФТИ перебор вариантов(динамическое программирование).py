# -*- coding: utf-8 -*-
"""
Created on Sun May 26 23:24:24 2019
Кузьнечик стоит на числовой прямой. Он может двигаться  только вперед, 
перепрыгивая на 1 или на 2 клетки за раз. Сколько способов добраться до клетки ?
uthor: ValentinePit
"""

def GrHop(n):
    """ Кузнечик стоит на клетке 1, значит в клетку 0 у него ровно 0 способов
        добраться. В клетку 1 - 1 способ. Создаем массив K. 
        Так как в последнюю клетку можно добраться только из двух (N-1 и N-2)
        то и количество траекторий будет равно сумме траекторий до них"""
    K = [0, 1] + [0]*(n-2)
    for i in range(2, n+1):
        K[i]=K[i-2]+K[i-1]
    return K[n]    



"""
Усложнение
Запретим кузнечику наступать на клетки 4 и 7, но разрешим прыгать на 3 клетки
создадим массив boolean значений с False для запрещенных(allowed)"""

def GrHop+1(n, allowed):
    K=[0, 1, int(allowed[2])]+[0]*(n-3)
    for i in range(3, n+1):
        if allowed[i]:
            K[i] = K[i-1] + K[i-2] + K[i-3]
    return K(n)        
        

"""Теперь кузнечик хочет за минимальную стоимость допрыгать до N 
price[i] стоимость посещения клетки
C[i] = cost[i] - минимальная стоимость достижения клетки  
кузнечику достуаны шаги на 1 и на 2 клетки
Будем выбирать min(C[n-1], C[n-2])
C[i] = price[i]+ min(C[i-1], C[i-2])
C[1] =price[1]    C[2] = price[1]+price[2]"""


def Count_min_cost(n, price):# price список с ценниками
    C=[None, price[1], price[1]+price[2]]+[0]*(n-2)
    for i in range(3, n+1):
        C[i] = price[i]+ min(C[i-1], C[i-2])
        
    return C[n]